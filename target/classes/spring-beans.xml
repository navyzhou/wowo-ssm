<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
	<!-- 导入外部资源文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
       
    <!-- 要扫描的包路径 -->
    <context:component-scan base-package="com.yc.wowo">
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RequestMapping"></context:exclude-filter>
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RequestParam"></context:exclude-filter>
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ResponseBody"></context:exclude-filter>
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.GetMapping"></context:exclude-filter>
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.PostMapping"></context:exclude-filter>
    	<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"></context:exclude-filter>
    </context:component-scan>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<!-- 注意：这里的value里面不能用变量 username 否则会读取不到  -->
		<property name="username" value="${user}" />
		<property name="password" value="${pwd}" />
	</bean>
	
	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源配置  -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 自动扫描mybatis配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		
		<!-- mybatis映射文件mapper的位置，类路径下面的mapper包下面的所以以Mapper.xml结尾的文件 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
		
		<!-- 别名 -->
		<property name="typeAliasesPackage" value="com.yc.wowo.bean"></property>
	</bean>
	
	<!-- 配置mybatis映射接口的代理实现，bean的id值，必须跟对应映射接口中的方法名一致 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定mapper映射文件对应的接口所在的包路径 -->
		<property name="basePackage" value="com.yc.wowo.mapper"></property>
		
		<!-- 注意：此时这里要的是一个String类型的值，而不是spring.SqlSessionFactoryBean对象，所以使用value而不是ref -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!--1、配置事务管理器  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven> 
	
	<!-- 文件上传的处理类 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
</beans>
